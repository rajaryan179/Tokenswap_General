// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

contract TokenSwap {
    IERC20 public token1;
    IERC20 public token2;
    uint256 public rate; // rate is the amount of token2 per token1

    constructor(address _token1, address _token2, uint256 _rate) {
        token1 = IERC20(_token1);
        token2 = IERC20(_token2);
        rate = _rate;
    }

    function swap(uint256 _amount) public {
        require(token1.transferFrom(msg.sender, address(this), _amount), "Transfer failed");
        uint256 token2Amount = _amount * rate;
        require(token2.transfer(msg.sender, token2Amount), "Transfer failed");
    }
}
